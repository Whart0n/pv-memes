{"ast":null,"code":"var _jsxFileName = \"/Users/code/PycharmProjects/PV Meme Generator/meme-generator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport './App.css';\nimport MemeGallery from './components/MemeGallery';\nimport TextBoxEditor from './components/TextBoxEditor';\nimport MemeCanvas from './components/MemeCanvas';\nimport AdminPage from './components/AdminPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [memeImages, setMemeImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [textBoxes, setTextBoxes] = useState([]);\n  const [selectedTextBoxId, setSelectedTextBoxId] = useState(null);\n  const [apiError, setApiError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Fetch meme templates from the backend API\n  const fetchMemeTemplates = async () => {\n    try {\n      // Try to fetch from API first\n      const response = await fetch('http://localhost:5000/api/templates');\n      if (response.ok) {\n        const templates = await response.json();\n        const templatePaths = templates.map(template => template.path);\n        setMemeImages(templatePaths);\n        setApiError('');\n      } else {\n        throw new Error('Failed to fetch templates from API');\n      }\n    } catch (err) {\n      console.error('Error fetching templates:', err);\n      setApiError('Could not connect to backend server. Using local templates.');\n\n      // Fallback to hardcoded list if API fails\n      const fallbackImages = ['memes/CHEETAH_BUTTON-2.webp', 'memes/Frank_Waiting-2.webp', 'memes/GFUNK__COURTNEY.webp', 'memes/Hilary_Smoking.webp', 'memes/Skull_distracted.webp', 'memes/WHAT_IF_I_TOLD_YOU.webp', 'memes/beanzie_this_is_fine.webp', 'memes/bring_it_marvin.webp', 'memes/drake_wiggles.webp', 'memes/gfunkbuttons.png', 'memes/ivanova_squint_template.webp', 'memes/other_women.webp'];\n      setMemeImages(fallbackImages);\n    }\n  };\n  useEffect(() => {\n    fetchMemeTemplates();\n  }, []);\n\n  // Handle image selection\n  const handleSelectImage = imagePath => {\n    setSelectedImage(imagePath);\n  };\n\n  // Handle adding a new text box\n  const handleAddTextBox = () => {\n    if (textBoxes.length >= 10) return; // Maximum 10 text boxes\n\n    const newTextBox = {\n      id: Date.now().toString(),\n      text: 'Add text here',\n      x: 50,\n      y: 50 + textBoxes.length * 30,\n      // Position each new text box slightly below the previous one\n      fontSize: 36,\n      fontFamily: 'Impact',\n      color: '#ffffff',\n      stroke: 'black',\n      width: 200,\n      height: 50,\n      rotation: 0\n    };\n    const updatedTextBoxes = [...textBoxes, newTextBox];\n    setTextBoxes(updatedTextBoxes);\n    setSelectedTextBoxId(newTextBox.id);\n  };\n\n  // Handle selecting a text box\n  const handleSelectTextBox = id => {\n    setSelectedTextBoxId(id);\n  };\n\n  // Handle updating a text box\n  const handleUpdateTextBox = (id, updates) => {\n    const updatedTextBoxes = textBoxes.map(box => {\n      if (box.id === id) {\n        return {\n          ...box,\n          ...updates\n        };\n      }\n      return box;\n    });\n    setTextBoxes(updatedTextBoxes);\n  };\n\n  // Handle removing a text box\n  const handleRemoveTextBox = id => {\n    const updatedTextBoxes = textBoxes.filter(box => box.id !== id);\n    setTextBoxes(updatedTextBoxes);\n    setSelectedTextBoxId(null);\n  };\n\n  // Navigate to admin page\n  const goToAdmin = () => {\n    navigate('/admin');\n  };\n\n  // Navigate back to editor\n  const goToEditor = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meme-generator\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(AdminPage, {\n          onClose: goToEditor,\n          onTemplatesUpdated: fetchMemeTemplates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"meme-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"PV Meme Generator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-content\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Create custom memes with your favorite templates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), apiError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"api-error\",\n              children: apiError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meme-gallery-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Choose a Template\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MemeGallery, {\n              memeImages: memeImages,\n              selectedImage: selectedImage,\n              onSelectImage: handleSelectImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meme-editor-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meme-editor-left\",\n              children: /*#__PURE__*/_jsxDEV(MemeCanvas, {\n                selectedImage: selectedImage,\n                textBoxes: textBoxes,\n                selectedTextBoxId: selectedTextBoxId,\n                onSelectTextBox: handleSelectTextBox,\n                onUpdateTextBox: handleUpdateTextBox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meme-editor-right\",\n              children: /*#__PURE__*/_jsxDEV(TextBoxEditor, {\n                textBoxes: textBoxes,\n                selectedTextBoxId: selectedTextBoxId,\n                onUpdateTextBox: handleUpdateTextBox,\n                onSelectTextBox: handleSelectTextBox,\n                onAddTextBox: handleAddTextBox,\n                onRemoveTextBox: handleRemoveTextBox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eVCdvqJhIqDEoxzynKaSpZK7fNI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","useNavigate","useLocation","MemeGallery","TextBoxEditor","MemeCanvas","AdminPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","memeImages","setMemeImages","selectedImage","setSelectedImage","textBoxes","setTextBoxes","selectedTextBoxId","setSelectedTextBoxId","apiError","setApiError","navigate","location","fetchMemeTemplates","response","fetch","ok","templates","json","templatePaths","map","template","path","Error","err","console","error","fallbackImages","handleSelectImage","imagePath","handleAddTextBox","length","newTextBox","id","Date","now","toString","text","x","y","fontSize","fontFamily","color","stroke","width","height","rotation","updatedTextBoxes","handleSelectTextBox","handleUpdateTextBox","updates","box","handleRemoveTextBox","filter","goToAdmin","goToEditor","className","children","element","onClose","onTemplatesUpdated","fileName","_jsxFileName","lineNumber","columnNumber","onSelectImage","onSelectTextBox","onUpdateTextBox","onAddTextBox","onRemoveTextBox","_c","$RefreshReg$"],"sources":["/Users/code/PycharmProjects/PV Meme Generator/meme-generator/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport './App.css';\nimport MemeGallery from './components/MemeGallery';\nimport TextBoxEditor from './components/TextBoxEditor';\nimport MemeCanvas from './components/MemeCanvas';\nimport AdminPage from './components/AdminPage';\n\nfunction App() {\n  const [memeImages, setMemeImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [textBoxes, setTextBoxes] = useState([]);\n  const [selectedTextBoxId, setSelectedTextBoxId] = useState(null);\n  const [apiError, setApiError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  // Fetch meme templates from the backend API\n  const fetchMemeTemplates = async () => {\n    try {\n      // Try to fetch from API first\n      const response = await fetch('http://localhost:5000/api/templates');\n      \n      if (response.ok) {\n        const templates = await response.json();\n        const templatePaths = templates.map(template => template.path);\n        setMemeImages(templatePaths);\n        setApiError('');\n      } else {\n        throw new Error('Failed to fetch templates from API');\n      }\n    } catch (err) {\n      console.error('Error fetching templates:', err);\n      setApiError('Could not connect to backend server. Using local templates.');\n      \n      // Fallback to hardcoded list if API fails\n      const fallbackImages = [\n        'memes/CHEETAH_BUTTON-2.webp',\n        'memes/Frank_Waiting-2.webp',\n        'memes/GFUNK__COURTNEY.webp',\n        'memes/Hilary_Smoking.webp',\n        'memes/Skull_distracted.webp',\n        'memes/WHAT_IF_I_TOLD_YOU.webp',\n        'memes/beanzie_this_is_fine.webp',\n        'memes/bring_it_marvin.webp',\n        'memes/drake_wiggles.webp',\n        'memes/gfunkbuttons.png',\n        'memes/ivanova_squint_template.webp',\n        'memes/other_women.webp'\n      ];\n      setMemeImages(fallbackImages);\n    }\n  };\n  \n  useEffect(() => {\n    fetchMemeTemplates();\n  }, []);\n\n  // Handle image selection\n  const handleSelectImage = (imagePath) => {\n    setSelectedImage(imagePath);\n  };\n\n  // Handle adding a new text box\n  const handleAddTextBox = () => {\n    if (textBoxes.length >= 10) return; // Maximum 10 text boxes\n    \n    const newTextBox = {\n      id: Date.now().toString(),\n      text: 'Add text here',\n      x: 50,\n      y: 50 + textBoxes.length * 30, // Position each new text box slightly below the previous one\n      fontSize: 36,\n      fontFamily: 'Impact',\n      color: '#ffffff',\n      stroke: 'black',\n      width: 200,\n      height: 50,\n      rotation: 0\n    };\n    \n    const updatedTextBoxes = [...textBoxes, newTextBox];\n    setTextBoxes(updatedTextBoxes);\n    setSelectedTextBoxId(newTextBox.id);\n  };\n\n  // Handle selecting a text box\n  const handleSelectTextBox = (id) => {\n    setSelectedTextBoxId(id);\n  };\n\n  // Handle updating a text box\n  const handleUpdateTextBox = (id, updates) => {\n    const updatedTextBoxes = textBoxes.map(box => {\n      if (box.id === id) {\n        return { ...box, ...updates };\n      }\n      return box;\n    });\n    setTextBoxes(updatedTextBoxes);\n  };\n\n  // Handle removing a text box\n  const handleRemoveTextBox = (id) => {\n    const updatedTextBoxes = textBoxes.filter(box => box.id !== id);\n    setTextBoxes(updatedTextBoxes);\n    setSelectedTextBoxId(null);\n  };\n\n  // Navigate to admin page\n  const goToAdmin = () => {\n    navigate('/admin');\n  };\n  \n  // Navigate back to editor\n  const goToEditor = () => {\n    navigate('/');\n  };\n\n  return (\n    <div className=\"meme-generator\">\n      <Routes>\n        <Route path=\"/admin\" element={\n          <AdminPage \n            onClose={goToEditor} \n            onTemplatesUpdated={fetchMemeTemplates} \n          />\n        } />\n        <Route path=\"/\" element={\n          <>\n            <header className=\"meme-header\">\n              <h1>PV Meme Generator</h1>\n              <div className=\"header-content\">\n                <p>Create custom memes with your favorite templates</p>\n              </div>\n              {apiError && <p className=\"api-error\">{apiError}</p>}\n            </header>\n        \n            {/* Template Gallery at the top */}\n            <div className=\"meme-gallery-container\">\n              <h3>Choose a Template</h3>\n              <MemeGallery \n                memeImages={memeImages} \n                selectedImage={selectedImage} \n                onSelectImage={handleSelectImage} \n              />\n            </div>\n            \n            {/* Main editing area with canvas on left and controls on right */}\n            <div className=\"meme-editor-container\">\n              <div className=\"meme-editor-left\">\n                <MemeCanvas \n                  selectedImage={selectedImage}\n                  textBoxes={textBoxes}\n                  selectedTextBoxId={selectedTextBoxId}\n                  onSelectTextBox={handleSelectTextBox}\n                  onUpdateTextBox={handleUpdateTextBox}\n                />\n              </div>\n              \n              <div className=\"meme-editor-right\">\n                <TextBoxEditor \n                  textBoxes={textBoxes}\n                  selectedTextBoxId={selectedTextBoxId}\n                  onUpdateTextBox={handleUpdateTextBox}\n                  onSelectTextBox={handleSelectTextBox}\n                  onAddTextBox={handleAddTextBox}\n                  onRemoveTextBox={handleRemoveTextBox}\n                />\n              </div>\n            </div>\n          </>\n        } />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}